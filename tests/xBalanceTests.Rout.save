
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require("RItools")
Loading required package: RItools
Loading required package: SparseM

Attaching package: 'SparseM'

The following object is masked from 'package:base':

    backsolve

> 
> data(nuclearplants)
> 
> ##################################################
> ### Basic uses
> ##################################################
> xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n, data=nuclearplants)
      strata():  unstrat        
      stat      std.diff       z
vars                            
date             -0.1147 -0.3052
t1                0.1063  0.2830
t2                1.0327  2.4674
cap               0.3401  0.8948
ne               -0.1631 -0.4334
ct               -0.3080 -0.8121
bw                0.0451  0.1202
cum.n            -0.0976 -0.2598
> 
> xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n, data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test'))
      strata():   unstrat                                    
      stat      Treatment  Control adj.diff std.diff        z
vars                                                         
date              68.5000  68.6182  -0.1182  -0.1147  -0.3052
t1                14.0000  13.6364   0.3636   0.1063   0.2830
t2                69.1000  59.3182   9.7818   1.0327   2.4674
cap              869.8000 805.1818  64.6182   0.3401   0.8948
ne                 0.2000   0.2727  -0.0727  -0.1631  -0.4334
ct                 0.3000   0.4545  -0.1545  -0.3080  -0.8121
bw                 0.2000   0.1818   0.0182   0.0451   0.1202
cum.n              8.1000   8.7273  -0.6273  -0.0976  -0.2598
---Overall Test---
        chisquare df p.value
unstrat      11.5  8   0.177
> 
> xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
+          strata=list(pt=~pt), 
+          data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test'))
      strata():        pt                                    
      stat      Treatment  Control adj.diff std.diff        z
vars                                                         
date              68.5903  68.4924   0.0979   0.0950   0.2923
t1                14.3488  13.3953   0.9535   0.2787   0.7918
t2                68.5523  59.1802   9.3721   0.9894   2.3094
cap              873.0233 806.4535  66.5698   0.3504   0.9188
ne                 0.2209   0.2442  -0.0233  -0.0522  -0.1445
ct                 0.3314   0.4419  -0.1105  -0.2201  -0.5828
bw                 0.1512   0.1977  -0.0465  -0.1154  -0.3088
cum.n              7.9012   8.7209  -0.8198  -0.1275  -0.3397
---Overall Test---
   chisquare df p.value
pt      10.8  8   0.215
> 
> (xb0 <- xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
+          strata=list(pt=~pt),
+          data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test'))
+ )
      strata():        pt                                    
      stat      Treatment  Control adj.diff std.diff        z
vars                                                         
date              68.5903  68.4924   0.0979   0.0950   0.2923
t1                14.3488  13.3953   0.9535   0.2787   0.7918
t2                68.5523  59.1802   9.3721   0.9894   2.3094
cap              873.0233 806.4535  66.5698   0.3504   0.9188
ne                 0.2209   0.2442  -0.0233  -0.0522  -0.1445
ct                 0.3314   0.4419  -0.1105  -0.2201  -0.5828
bw                 0.1512   0.1977  -0.0465  -0.1154  -0.3088
cum.n              7.9012   8.7209  -0.8198  -0.1275  -0.3397
---Overall Test---
   chisquare df p.value
pt      10.8  8   0.215
> ##########################################################################################
> ### Oddness on LHS of formula
> ##########################################################################################Q
> xBalance(I(pr==1) ~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
+          strata=list(pt=~pt),
+          data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test')
+          )
      strata():        pt                                    
      stat      Treatment  Control adj.diff std.diff        z
vars                                                         
date              68.5903  68.4924   0.0979   0.0950   0.2923
t1                14.3488  13.3953   0.9535   0.2787   0.7918
t2                68.5523  59.1802   9.3721   0.9894   2.3094
cap              873.0233 806.4535  66.5698   0.3504   0.9188
ne                 0.2209   0.2442  -0.0233  -0.0522  -0.1445
ct                 0.3314   0.4419  -0.1105  -0.2201  -0.5828
bw                 0.1512   0.1977  -0.0465  -0.1154  -0.3088
cum.n              7.9012   8.7209  -0.8198  -0.1275  -0.3397
---Overall Test---
   chisquare df p.value
pt      10.8  8   0.215
> 
> 
> #####################################################
> ######               xtable method                ###
> #####################################################
> if (require('xtable'))
+   {
+   xtablea <- xtable(xb0)
+   xtableb <- xtable(xb0, caption="Caption!", label="thetable", digits=1,
+        align=rep('l', prod(dim(xb0$result)[2:3])+1),
+        display=c('s', rep(c(rep('fg', dim(xb0$result)[2]-1), 's'),
+          dim(xb0$result)[3]) ) #,col.labels= do this one later
+        )
+   }
Loading required package: xtable
> 
> 
> #####################################################
> ######               include.means                ###
> #####################################################
> ###xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###         ~factor(pt), nuclearplants,
> ###         covariate.scaling=1, include.means=TRUE)
> ###xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###         ~factor(pt), nuclearplants, include.means=TRUE)
> ###
> ###
> #####################################################
> ######  na.rm=FALSE with missing covariates       ###
> #####################################################
> ### Should create a new variable (0=not missing,1=missing) and impute missing values with the mean (median is new default)
> 
> set.seed(123)
> testdata<-nuclearplants
> testdata$date[sample(1:32,10)]<-NA
> 
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.n, data = testdata,
+     na.rm = FALSE,impfn=mean.default) ##first using the mean to match up with previous versions
            strata():  unstrat        
            stat      std.diff       z
vars                                  
date                    0.0203  0.0541
t1                      0.1063  0.2830
t2                      1.0327  2.4674
cap                     0.3401  0.8948
ne                     -0.1631 -0.4334
ct                     -0.3080 -0.8121
bw                      0.0451  0.1202
cum.n                  -0.0976 -0.2598
date.NATRUE            -1.0660 -2.5308
> 
> #####################################################
> ######  handling factor with no obs for a level in a strata  ###
> #####################################################
> 
> testdata<-nuclearplants
> testdata$cum.nF<-factor(testdata$cum.n)
> 
> ##Notice that for most levels of cum.n, there are no obs in one of the two strata
> table(testdata$pt,testdata$cum.n)
   
    1 2 3 5 6 7 8 11 12 14 15 16 17 18 19 20 21
  0 4 3 4 2 1 1 1  0  2  1  1  1  1  1  1  1  1
  1 0 0 0 0 0 1 2  3  0  0  0  0  0  0  0  0  0
> 
> ##    1 2 3 5 6 7 8 11 12 14 15 16 17 18 19 20 21
> ##  0 4 3 4 2 1 1 1  0  2  1  1  1  1  1  1  1  1
> ##  1 0 0 0 0 0 1 2  3  0  0  0  0  0  0  0  0  0
> 
> ##First no missing levels, same in both strata --- looks ok
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.nF, strata= list(pt=~pt), data = testdata,impfn=mean.default)
         strata():       pt        
         stat      std.diff       z
vars                               
date                 0.0950  0.2923
t1                   0.2787  0.7918
t2                   0.9894  2.3094
cap                  0.3504  0.9188
ne                  -0.0522 -0.1445
ct                  -0.2201 -0.5828
bw                  -0.1154 -0.3088
cum.nF1             -0.0341 -0.0924
cum.nF2              0.0966  0.2610
cum.nF3             -0.0341 -0.0924
cum.nF5              0.2806  0.7509
cum.nF6             -0.2282 -0.6070
cum.nF7             -0.4723 -1.1509
cum.nF8              0.3786  0.9460
cum.nF11             0.2590  0.7454
cum.nF12             0.2806  0.7509
cum.nF14            -0.2282 -0.6070
cum.nF15            -0.2282 -0.6070
cum.nF16            -0.2282 -0.6070
cum.nF17            -0.2282 -0.6070
cum.nF18            -0.2282 -0.6070
cum.nF19            -0.2282 -0.6070
cum.nF20             0.6378  1.6475
cum.nF21            -0.2282 -0.6070
> 
> ##Second two missing levels, same in both strata
> ##This doesn't look as good --- we'd prefer to drop levels that don't exist.
> 
> testdata$cum.nF[testdata$cum.n>16]<-NA
> testdata$cum.nF[testdata$cum.n==7]<-NA
> table(testdata$pt,testdata$cum.nF,exclude=c()) ##Notice that the levels don't disappear by default.
   
    1 2 3 5 6 7 8 11 12 14 15 16 17 18 19 20 21 <NA>
  0 4 3 4 2 1 0 1  0  2  1  1  1  0  0  0  0  0    6
  1 0 0 0 0 0 0 2  3  0  0  0  0  0  0  0  0  0    1
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.nF, strata=list(pt=~pt), data = testdata,na.rm=FALSE,impfn=mean.default)
         strata():       pt        
         stat      std.diff       z
vars                               
date                 0.0950  0.2923
t1                   0.2787  0.7918
t2                   0.9894  2.3094
cap                  0.3504  0.9188
ne                  -0.0522 -0.1445
ct                  -0.2201 -0.5828
bw                  -0.1154 -0.3088
cum.nF1             -0.0341 -0.0924
cum.nF2              0.0966  0.2610
cum.nF3             -0.0341 -0.0924
cum.nF5              0.2806  0.7509
cum.nF6             -0.2282 -0.6070
cum.nF8              0.3786  0.9460
cum.nF11             0.2590  0.7454
cum.nF12             0.2806  0.7509
cum.nF14            -0.2282 -0.6070
cum.nF15            -0.2282 -0.6070
cum.nF16            -0.2282 -0.6070
cum.nFNA            -0.4025 -1.0206
> 
> ##This isn't right either.
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.nF, strata=list(pt=~pt), data = testdata,na.rm=TRUE,impfn=mean.default)
         strata():       pt        
         stat      std.diff       z
vars                               
date                 0.1091  0.4662
t1                   0.2815  0.9554
t2                   0.8524  1.8952
cap                  0.4887  1.1309
ne                  -0.3323 -0.8303
ct                   0.1107  0.2868
bw                  -0.3216 -0.7283
cum.nF1             -0.0966 -0.2378
cum.nF2              0.0546  0.1332
cum.nF3             -0.0966 -0.2378
cum.nF5              0.2668  0.6341
cum.nF6             -0.2656 -0.6547
cum.nF7                 NaN  0.0000
cum.nF8              0.2898  0.6623
cum.nF11             0.1159  0.3333
cum.nF12             0.2668  0.6341
cum.nF14            -0.2656 -0.6547
cum.nF15            -0.2656 -0.6547
cum.nF16            -0.2656 -0.6547
cum.nF17                NaN  0.0000
cum.nF18                NaN  0.0000
cum.nF19                NaN  0.0000
cum.nF20                NaN  0.0000
cum.nF21                NaN  0.0000
> 
> 
> #####################################################
> ######  handling factor with no levels strata=argument  ###
> #####################################################
> testdata$badStrat <- rep(NA, dim(testdata)[1])
> try(xBalance(pr ~ date, strata=list(~badStrat),
+              data=testdata), FALSE)
Error in xBalance(pr ~ date, strata = list(~badStrat), data = testdata) : 
  'strata=' variable contains no strata.  Perhaps it evaluates to NAs?
> 
> #####################################################
> ######             WISHLIST                       ###
> #####################################################
> ###
> ###
> ###
> ###
> 
> proc.time()
   user  system elapsed 
  1.672   0.159   1.823 
